{
  "address": "0x634283AB88d1a5316366be5ef5C9c880429C784A",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_weth",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "OnlyOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyTrusted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SlippageProtection",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFailed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bridge",
          "type": "address"
        }
      ],
      "name": "SetBridge",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "SetOwner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isTrusted",
          "type": "bool"
        }
      ],
      "name": "SetTrusted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "bridges",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IUniV2[]",
          "name": "lpTokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "minimumOut0",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "minimumOut1",
          "type": "uint256[]"
        }
      ],
      "name": "burnPairs",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amountsIn",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "minimumOuts",
          "type": "uint256[]"
        }
      ],
      "name": "buyWeth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "contract IUniV2Factory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isTrusted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_bridge",
          "type": "address"
        }
      ],
      "name": "setAllowedBridge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isTrusted",
          "type": "bool"
        }
      ],
      "name": "setTrusted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IUniV2[]",
          "name": "lpTokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "minimumOuts",
          "type": "uint256[]"
        },
        {
          "internalType": "bool[]",
          "name": "keepToken0",
          "type": "bool[]"
        }
      ],
      "name": "unwindPairs",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xfb7c5d8fdc47e84f11b401dc699454e1791115e7d4d6bb881027ff4c9f499ccb",
  "receipt": {
    "to": null,
    "from": "0x58B4B6951e9174F153635574076241315D7d3503",
    "contractAddress": "0x634283AB88d1a5316366be5ef5C9c880429C784A",
    "transactionIndex": 2,
    "gasUsed": "1527201",
    "logsBloom": "0x
    "blockHash": "0xffce10cf22d33cad26b71635fa15e4a1e6ef7d1e2e9ce3753d0bb68bef4cd044",
    "transactionHash": "0xfb7c5d8fdc47e84f11b401dc699454e1791115e7d4d6bb881027ff4c9f499ccb",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 28742365,
        "transactionHash": "0xfb7c5d8fdc47e84f11b401dc699454e1791115e7d4d6bb881027ff4c9f499ccb",
        "address": "0x634283AB88d1a5316366be5ef5C9c880429C784A",
        "topics": [
          "0x167d3e9c1016ab80e58802ca9da10ce5c6a0f4debc46a2e7a2cd9e56899a4fb5",
          "0x0000000000000000000000003027a0c4e35272c0707de2651a0638c3df1c37ac"
        ],
        "data": "0x",
        "logIndex": 4,
        "blockHash": "0xffce10cf22d33cad26b71635fa15e4a1e6ef7d1e2e9ce3753d0bb68bef4cd044"
      },
      {
        "transactionIndex": 2,
        "blockNumber": 28742365,
        "transactionHash": "0xfb7c5d8fdc47e84f11b401dc699454e1791115e7d4d6bb881027ff4c9f499ccb",
        "address": "0x634283AB88d1a5316366be5ef5C9c880429C784A",
        "topics": [
          "0x878d105ed19c01e992a54459c2f04ba19432ac45600b42ce340d034272207436",
          "0x00000000000000000000000010025a49f69ba9445e9b81d0003b235ee629115f"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 5,
        "blockHash": "0xffce10cf22d33cad26b71635fa15e4a1e6ef7d1e2e9ce3753d0bb68bef4cd044"
      }
    ],
    "blockNumber": 28742365,
    "cumulativeGasUsed": "3483665",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x3027a0c4E35272c0707dE2651A0638c3dF1c37AC",
    "0x10025a49F69Ba9445e9b81d0003b235EE629115F",
    "0xc35DADB65012eC5796536bD9864eD8773aBc74C4",
    "0xd0A1E359811322d97991E03f863a0C30C2cF029C"
  ],
  "solcInputHash": "6ba3acfee65513e272c366e8c692ae4e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_weth\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"OnlyOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyTrusted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SlippageProtection\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bridge\",\"type\":\"address\"}],\"name\":\"SetBridge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"SetOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isTrusted\",\"type\":\"bool\"}],\"name\":\"SetTrusted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bridges\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IUniV2[]\",\"name\":\"lpTokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"minimumOut0\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"minimumOut1\",\"type\":\"uint256[]\"}],\"name\":\"burnPairs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"minimumOuts\",\"type\":\"uint256[]\"}],\"name\":\"buyWeth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract IUniV2Factory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isTrusted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_bridge\",\"type\":\"address\"}],\"name\":\"setAllowedBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isTrusted\",\"type\":\"bool\"}],\"name\":\"setTrusted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IUniV2[]\",\"name\":\"lpTokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"minimumOuts\",\"type\":\"uint256[]\"},{\"internalType\":\"bool[]\",\"name\":\"keepToken0\",\"type\":\"bool[]\"}],\"name\":\"unwindPairs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contract for selling received tokens into weth. Deploy on secondary networks.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WethMaker.sol\":\"WethMaker\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/Auth.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\npragma solidity >=0.8.0;\\n\\nabstract contract Auth {\\n\\n    event SetOwner(address indexed owner);\\n    event SetTrusted(address indexed user, bool isTrusted);\\n\\n    address public owner;\\n\\n    mapping(address => bool) public isTrusted;\\n\\n    error OnlyOwner();\\n    error OnlyTrusted();\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != owner) revert OnlyOwner();\\n        _;\\n    }\\n\\n    modifier onlyTrusted() {\\n        if (!isTrusted[msg.sender]) revert OnlyTrusted();\\n        _;\\n    }\\n\\n    constructor(address _owner, address _trusted) {\\n        owner = _owner;\\n        isTrusted[_trusted] = true;\\n\\n        emit SetOwner(owner);\\n        emit SetTrusted(_trusted, true);\\n    }\\n\\n    function setOwner(address _owner) external onlyOwner {\\n        owner = _owner;\\n        emit SetOwner(owner);\\n    }\\n\\n    function setTrusted(address _user, bool _isTrusted) external onlyOwner {\\n        isTrusted[_user] = _isTrusted;\\n        emit SetTrusted(_user, _isTrusted);\\n    }\\n\\n}\\n\",\"keccak256\":\"0x61d205001c4781fb9817f2a040a82882e3e1aa245f7b28433e85f1f72a4fa713\",\"license\":\"GPL-3.0-or-later\"},\"contracts/Unwindooor.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"./Auth.sol\\\";\\nimport \\\"./interfaces/IUniV2.sol\\\";\\n\\n/// @notice Contract for withdrawing LP positions.\\n/// @dev Calling unwindPairs() withdraws the LP position into one of the two tokens\\ncontract Unwindooor is Auth {\\n\\n    error SlippageProtection();\\n    error TransferFailed();\\n\\n    bytes4 private constant TRANSFER_SELECTOR = bytes4(keccak256(bytes('transfer(address,uint256)')));\\n\\n    constructor(address _owner, address _user) Auth(_owner, _user) {}\\n\\n    function unwindPairs(\\n        IUniV2[] calldata lpTokens,\\n        uint256[] calldata amounts,\\n        uint256[] calldata minimumOuts,\\n        bool[] calldata keepToken0\\n    ) external onlyTrusted {\\n        for (uint256 i = 0; i < lpTokens.length; i++) {\\n            if (_unwindPair(lpTokens[i], amounts[i], keepToken0[i]) < minimumOuts[i]) revert SlippageProtection();\\n        }\\n    }\\n\\n    // Burn liquidity and sell one of the tokens for the other.\\n    function _unwindPair(\\n        IUniV2 pair,\\n        uint256 amount,\\n        bool keepToken0\\n    ) private returns (uint256 amountOut) {\\n\\n        pair.transfer(address(pair), amount);\\n        (uint256 amount0, uint256 amount1) = pair.burn(address(this));\\n        (uint112 reserve0, uint112 reserve1,) = pair.getReserves();\\n\\n        if (keepToken0) {\\n            _safeTransfer(pair.token1(), address(pair), amount1);\\n            amountOut = _getAmountOut(amount1, uint256(reserve1), uint256(reserve0));\\n            pair.swap(amountOut, 0, address(this), \\\"\\\");\\n            amountOut += amount0;\\n        } else {\\n            _safeTransfer(pair.token0(), address(pair), amount0);\\n            amountOut = _getAmountOut(amount0, uint256(reserve0), uint256(reserve1));\\n            pair.swap(0, amountOut, address(this), \\\"\\\");\\n            amountOut += amount1;\\n        }\\n    }\\n\\n    // Incase we don't want to sell one of the tokens for the other.\\n    function burnPairs(\\n        IUniV2[] calldata lpTokens,\\n        uint256[] calldata amounts,\\n        uint256[] calldata minimumOut0,\\n        uint256[] calldata minimumOut1\\n    ) external onlyTrusted {\\n        for (uint256 i = 0; i < lpTokens.length; i++) {\\n            IUniV2 pair = lpTokens[i];\\n            pair.transfer(address(pair), amounts[i]);\\n            (uint256 amount0, uint256 amount1) = pair.burn(address(this));\\n            if (amount0 < minimumOut0[i] || amount1 < minimumOut1[i]) revert SlippageProtection();\\n        }\\n    }\\n\\n    function _getAmountOut(\\n        uint256 amountIn,\\n        uint256 reserveIn,\\n        uint256 reserveOut\\n    ) internal pure returns (uint256) {\\n        uint256 amountInWithFee = amountIn * 997;\\n        uint256 numerator = amountInWithFee * reserveOut;\\n        uint256 denominator = reserveIn * 1000 + amountInWithFee;\\n        return numerator / denominator;\\n    }\\n\\n    function _safeTransfer(address token, address to, uint value) internal {\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(TRANSFER_SELECTOR, to, value));\\n        if (!success || (data.length != 0 && !abi.decode(data, (bool)))) revert TransferFailed();\\n    }\\n\\n}\\n\",\"keccak256\":\"0x8de06710aeaf0417123439f3193bf84fa2223d3bb60855e490e01318ede785d4\",\"license\":\"GPL-3.0-or-later\"},\"contracts/WethMaker.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"./Unwindooor.sol\\\";\\nimport \\\"./interfaces/IUniV2Factory.sol\\\";\\n\\n/// @notice Contract for selling received tokens into weth. Deploy on secondary networks.\\ncontract WethMaker is Unwindooor {\\n\\n    event SetBridge(address indexed token, address bridge);\\n\\n    address public immutable weth;\\n    IUniV2Factory public immutable factory;\\n\\n    mapping(address => address) public bridges;\\n\\n    constructor(address _owner, address _user, address _factory, address _weth) Unwindooor(_owner, _user) {\\n        factory = IUniV2Factory(_factory);\\n        weth = _weth;\\n    }\\n\\n    function setAllowedBridge(address _token, address _bridge) external onlyOwner {\\n        bridges[_token] = _bridge;\\n        emit SetBridge(_token, _bridge);\\n    }\\n\\n    // Exchange token for weth or its bridge token (which gets converted into weth in subsequent transactions).\\n    function buyWeth(\\n        address[] calldata tokens,\\n        uint256[] calldata amountsIn,\\n        uint256[] calldata minimumOuts\\n    ) external onlyTrusted {\\n        for (uint256 i = 0; i < tokens.length; i++) {\\n\\n            address tokenIn = tokens[i];\\n            address outToken = bridges[tokenIn] == address(0) ? weth : bridges[tokenIn];\\n            if (_swap(tokenIn, outToken, amountsIn[i], address(this)) < minimumOuts[i]) revert SlippageProtection();\\n            \\n        }\\n    }\\n\\n    function _swap(\\n        address tokenIn,\\n        address tokenOut,\\n        uint256 amountIn,\\n        address to\\n    ) internal returns (uint256 outAmount) {\\n        \\n        IUniV2 pair = IUniV2(factory.getPair(tokenIn, tokenOut));\\n        IERC20(tokenIn).transfer(address(pair), amountIn);\\n\\n        (uint256 reserve0, uint256 reserve1, ) = pair.getReserves();\\n\\n        if (tokenIn < tokenOut) {\\n\\n            outAmount = _getAmountOut(amountIn, reserve0, reserve1);\\n            pair.swap(0, outAmount, to, \\\"\\\");\\n\\n        } else {\\n\\n            outAmount = _getAmountOut(amountIn, reserve1, reserve0);\\n            pair.swap(outAmount, 0, to, \\\"\\\");\\n\\n        }\\n\\n    }\\n\\n    // Allow the owner to withdraw the funds and bridge them to mainnet.\\n    function withdraw(address _token, address _to, uint256 _value) onlyOwner virtual external {\\n        if (_token != address(0)) {\\n            _safeTransfer(_token, _to, _value);\\n        } else {\\n            (bool success, ) = _to.call{value: _value}(\\\"\\\");\\n            require(success);\\n        }\\n    }\\n\\n}\\n\",\"keccak256\":\"0x08e867f8596f8c9f72158294e515e15bfed2fd1b34036f114d4ef60eff04a273\",\"license\":\"GPL-3.0-or-later\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\ninterface IERC20 {\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n    function balanceOf(address addy) external view returns (uint256);\\n}\",\"keccak256\":\"0x2f287c50356328f67ae0860045e18da10557296548c083cd90e6145cdc9e2f8b\",\"license\":\"GPL-3.0-or-later\"},\"contracts/interfaces/IUniV2.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\nimport \\\"./IERC20.sol\\\";\\n\\ninterface IUniV2 is IERC20 {\\n    function totalSupply() external view returns (uint256);\\n    function getReserves() external view returns (uint112 _reserve0, uint112 _reserve1, uint32 _blockTimestampLast);\\n    function burn(address to) external returns (uint256 amount0, uint256 amount1);\\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\n    function token0() external view returns (address);\\n    function token1() external view returns (address);\\n}\",\"keccak256\":\"0xba877faa323b59d44420f92f2a239e63f509d0eb4487f1f8c5814ae31dc5bce3\",\"license\":\"GPL-3.0-or-later\"},\"contracts/interfaces/IUniV2Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\ninterface IUniV2Factory {\\n    function getPair(address tokenA, address tokenB) external view returns (address);\\n}\",\"keccak256\":\"0x9391904c1c33483d2f73bedc82be95d88375dccfc695a7ec6dcd8f975a97b7de\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "0x60c06040523480156200001157600080fd5b5060405162001b8938038062001b8983398101604081905262000034916200011d565b600080546001600160a01b0319166001600160a01b038681169190911782558481168252600160208190526040808420805460ff19169092179091558254905187938793859385939116917f167d3e9c1016ab80e58802ca9da10ce5c6a0f4debc46a2e7a2cd9e56899a4fb591a2604051600181526001600160a01b038216907f878d105ed19c01e992a54459c2f04ba19432ac45600b42ce340d0342722074369060200160405180910390a25050506001600160a01b0392831660a0525016608052506200017a9050565b80516001600160a01b03811681146200011857600080fd5b919050565b600080600080608085870312156200013457600080fd5b6200013f8562000100565b93506200014f6020860162000100565b92506200015f6040860162000100565b91506200016f6060860162000100565b905092959194509250565b60805160a0516119db620001ae600039600081816101d00152610fa5015260008181610106015261079b01526119db6000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c80639dd8a81c11610081578063d9caed121161005b578063d9caed1214610228578063dd5b80631461023b578063f32a12ac1461024e57600080fd5b80639dd8a81c146101b8578063c45a0155146101cb578063ced67f0c146101f257600080fd5b80635aa79459116100b25780635aa79459146101525780638da5cb5b1461016557806396d648791461018557600080fd5b806313af4035146100d9578063248091c0146100ee5780633fc8cef314610101575b600080fd5b6100ec6100e73660046114d1565b610261565b005b6100ec6100fc366004611541565b61031f565b6101287f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100ec610160366004611541565b610598565b6000546101289073ffffffffffffffffffffffffffffffffffffffff1681565b6101a86101933660046114d1565b60016020526000908152604090205460ff1681565b6040519015158152602001610149565b6100ec6101c6366004611605565b6106be565b6101287f000000000000000000000000000000000000000000000000000000000000000081565b6101286102003660046114d1565b60026020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6100ec61023636600461169f565b610850565b6100ec6102493660046116e0565b610940565b6100ec61025c366004611727565b610a1e565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102b2576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8316908117825560405190917f167d3e9c1016ab80e58802ca9da10ce5c6a0f4debc46a2e7a2cd9e56899a4fb591a250565b3360009081526001602052604090205460ff16610368576040517fcf1119ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8781101561058d57600089898381811061038757610387611755565b905060200201602081019061039c91906114d1565b90508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb828a8a868181106103cd576103cd611755565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b16815273ffffffffffffffffffffffffffffffffffffffff909416600485015260200291909101356024830152506044016020604051808303816000875af1158015610446573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046a9190611784565b506040517f89afcb44000000000000000000000000000000000000000000000000000000008152306004820152600090819073ffffffffffffffffffffffffffffffffffffffff8416906389afcb449060240160408051808303816000875af11580156104db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ff91906117a1565b9150915087878581811061051557610515611755565b90506020020135821080610540575085858581811061053657610536611755565b9050602002013581105b15610577576040517f17d431f400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050508080610585906117f4565b91505061036b565b505050505050505050565b3360009081526001602052604090205460ff166105e1576040517fcf1119ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8781101561058d578484828181106105fe576105fe611755565b905060200201356106748a8a8481811061061a5761061a611755565b905060200201602081019061062f91906114d1565b89898581811061064157610641611755565b9050602002013586868681811061065a5761065a611755565b905060200201602081019061066f919061182d565b610af2565b10156106ac576040517f17d431f400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806106b6816117f4565b9150506105e4565b3360009081526001602052604090205460ff16610707576040517fcf1119ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8581101561084757600087878381811061072657610726611755565b905060200201602081019061073b91906114d1565b73ffffffffffffffffffffffffffffffffffffffff8082166000908152600260205260408120549293509116156107995773ffffffffffffffffffffffffffffffffffffffff808316600090815260026020526040902054166107bb565b7f00000000000000000000000000000000000000000000000000000000000000005b90508484848181106107cf576107cf611755565b905060200201356107fa83838a8a888181106107ed576107ed611755565b9050602002013530610f53565b1015610832576040517f17d431f400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050808061083f906117f4565b91505061070a565b50505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146108a1576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8316156108cd576108c88383836112e8565b505050565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610927576040519150601f19603f3d011682016040523d82523d6000602084013e61092c565b606091505b505090508061093a57600080fd5b50505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610991576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82811660008181526002602090815260409182902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169486169485179055905192835290917f8357797ab855a0bad5103ea8bd2f21f986350e94d73f143ae114db8f0db5a93a91015b60405180910390a25050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610a6f576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821660008181526001602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915591519182527f878d105ed19c01e992a54459c2f04ba19432ac45600b42ce340d0342722074369101610a12565b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416600482018190526024820184905260009163a9059cbb906044016020604051808303816000875af1158015610b68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8c9190611784565b506040517f89afcb44000000000000000000000000000000000000000000000000000000008152306004820152600090819073ffffffffffffffffffffffffffffffffffffffff8716906389afcb449060240160408051808303816000875af1158015610bfd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2191906117a1565b915091506000808773ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610c73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c97919061186d565b50915091508515610df757610d1b8873ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cf0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1491906118bd565b89856112e8565b610d4683826dffffffffffffffffffffffffffff16846dffffffffffffffffffffffffffff1661145d565b6040517f022c0d9f0000000000000000000000000000000000000000000000000000000081526004810182905260006024820181905230604483015260806064830152608482015290955073ffffffffffffffffffffffffffffffffffffffff89169063022c0d9f9060a401600060405180830381600087803b158015610dcc57600080fd5b505af1158015610de0573d6000803e3d6000fd5b505050508385610df091906118da565b9450610f48565b610e708873ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6991906118bd565b89866112e8565b610e9b84836dffffffffffffffffffffffffffff16836dffffffffffffffffffffffffffff1661145d565b6040517f022c0d9f0000000000000000000000000000000000000000000000000000000081526000600482018190526024820183905230604483015260806064830152608482015290955073ffffffffffffffffffffffffffffffffffffffff89169063022c0d9f9060a401600060405180830381600087803b158015610f2157600080fd5b505af1158015610f35573d6000803e3d6000fd5b505050508285610f4591906118da565b94505b505050509392505050565b6040517fe6a4390500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152848116602483015260009182917f0000000000000000000000000000000000000000000000000000000000000000169063e6a4390590604401602060405180830381865afa158015610fec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101091906118bd565b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8083166004830152602482018790529192509087169063a9059cbb906044016020604051808303816000875af1158015611089573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ad9190611784565b506000808273ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156110fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611120919061186d565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff1691508673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16101561122d5761118486838361145d565b6040517f022c0d9f0000000000000000000000000000000000000000000000000000000081526000600482018190526024820183905273ffffffffffffffffffffffffffffffffffffffff88811660448401526080606484015260848301919091529195509084169063022c0d9f9060a401600060405180830381600087803b15801561121057600080fd5b505af1158015611224573d6000803e3d6000fd5b505050506112dd565b61123886828461145d565b6040517f022c0d9f0000000000000000000000000000000000000000000000000000000081526004810182905260006024820181905273ffffffffffffffffffffffffffffffffffffffff88811660448401526080606484015260848301919091529195509084169063022c0d9f9060a401600060405180830381600087803b1580156112c457600080fd5b505af11580156112d8573d6000803e3d6000fd5b505050505b505050949350505050565b604080518082018252601981527f7472616e7366657228616464726573732c75696e743235362900000000000000602091820152815173ffffffffffffffffffffffffffffffffffffffff85811660248301526044808301869052845180840390910181526064909201845291810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052915160009283928716916113af91906118f2565b6000604051808303816000865af19150503d80600081146113ec576040519150601f19603f3d011682016040523d82523d6000602084013e6113f1565b606091505b509150915081158061141f575080511580159061141f57508080602001905181019061141d9190611784565b155b15611456576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505050565b60008061146c856103e561192d565b9050600061147a848361192d565b905060008261148b876103e861192d565b61149591906118da565b90506114a1818361196a565b979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff811681146114ce57600080fd5b50565b6000602082840312156114e357600080fd5b81356114ee816114ac565b9392505050565b60008083601f84011261150757600080fd5b50813567ffffffffffffffff81111561151f57600080fd5b6020830191508360208260051b850101111561153a57600080fd5b9250929050565b6000806000806000806000806080898b03121561155d57600080fd5b883567ffffffffffffffff8082111561157557600080fd5b6115818c838d016114f5565b909a50985060208b013591508082111561159a57600080fd5b6115a68c838d016114f5565b909850965060408b01359150808211156115bf57600080fd5b6115cb8c838d016114f5565b909650945060608b01359150808211156115e457600080fd5b506115f18b828c016114f5565b999c989b5096995094979396929594505050565b6000806000806000806060878903121561161e57600080fd5b863567ffffffffffffffff8082111561163657600080fd5b6116428a838b016114f5565b9098509650602089013591508082111561165b57600080fd5b6116678a838b016114f5565b9096509450604089013591508082111561168057600080fd5b5061168d89828a016114f5565b979a9699509497509295939492505050565b6000806000606084860312156116b457600080fd5b83356116bf816114ac565b925060208401356116cf816114ac565b929592945050506040919091013590565b600080604083850312156116f357600080fd5b82356116fe816114ac565b9150602083013561170e816114ac565b809150509250929050565b80151581146114ce57600080fd5b6000806040838503121561173a57600080fd5b8235611745816114ac565b9150602083013561170e81611719565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561179657600080fd5b81516114ee81611719565b600080604083850312156117b457600080fd5b505080516020909101519092909150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611826576118266117c5565b5060010190565b60006020828403121561183f57600080fd5b81356114ee81611719565b80516dffffffffffffffffffffffffffff8116811461186857600080fd5b919050565b60008060006060848603121561188257600080fd5b61188b8461184a565b92506118996020850161184a565b9150604084015163ffffffff811681146118b257600080fd5b809150509250925092565b6000602082840312156118cf57600080fd5b81516114ee816114ac565b600082198211156118ed576118ed6117c5565b500190565b6000825160005b8181101561191357602081860181015185830152016118f9565b81811115611922576000828501525b509190910192915050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611965576119656117c5565b500290565b6000826119a0577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea264697066735822122001f1374a82176b8ee312f18893b1327e9af6f0a074adbd4a536307860573f77e64736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100d45760003560e01c80639dd8a81c11610081578063d9caed121161005b578063d9caed1214610228578063dd5b80631461023b578063f32a12ac1461024e57600080fd5b80639dd8a81c146101b8578063c45a0155146101cb578063ced67f0c146101f257600080fd5b80635aa79459116100b25780635aa79459146101525780638da5cb5b1461016557806396d648791461018557600080fd5b806313af4035146100d9578063248091c0146100ee5780633fc8cef314610101575b600080fd5b6100ec6100e73660046114d1565b610261565b005b6100ec6100fc366004611541565b61031f565b6101287f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100ec610160366004611541565b610598565b6000546101289073ffffffffffffffffffffffffffffffffffffffff1681565b6101a86101933660046114d1565b60016020526000908152604090205460ff1681565b6040519015158152602001610149565b6100ec6101c6366004611605565b6106be565b6101287f000000000000000000000000000000000000000000000000000000000000000081565b6101286102003660046114d1565b60026020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6100ec61023636600461169f565b610850565b6100ec6102493660046116e0565b610940565b6100ec61025c366004611727565b610a1e565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102b2576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8316908117825560405190917f167d3e9c1016ab80e58802ca9da10ce5c6a0f4debc46a2e7a2cd9e56899a4fb591a250565b3360009081526001602052604090205460ff16610368576040517fcf1119ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8781101561058d57600089898381811061038757610387611755565b905060200201602081019061039c91906114d1565b90508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb828a8a868181106103cd576103cd611755565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b16815273ffffffffffffffffffffffffffffffffffffffff909416600485015260200291909101356024830152506044016020604051808303816000875af1158015610446573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046a9190611784565b506040517f89afcb44000000000000000000000000000000000000000000000000000000008152306004820152600090819073ffffffffffffffffffffffffffffffffffffffff8416906389afcb449060240160408051808303816000875af11580156104db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ff91906117a1565b9150915087878581811061051557610515611755565b90506020020135821080610540575085858581811061053657610536611755565b9050602002013581105b15610577576040517f17d431f400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050508080610585906117f4565b91505061036b565b505050505050505050565b3360009081526001602052604090205460ff166105e1576040517fcf1119ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8781101561058d578484828181106105fe576105fe611755565b905060200201356106748a8a8481811061061a5761061a611755565b905060200201602081019061062f91906114d1565b89898581811061064157610641611755565b9050602002013586868681811061065a5761065a611755565b905060200201602081019061066f919061182d565b610af2565b10156106ac576040517f17d431f400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806106b6816117f4565b9150506105e4565b3360009081526001602052604090205460ff16610707576040517fcf1119ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8581101561084757600087878381811061072657610726611755565b905060200201602081019061073b91906114d1565b73ffffffffffffffffffffffffffffffffffffffff8082166000908152600260205260408120549293509116156107995773ffffffffffffffffffffffffffffffffffffffff808316600090815260026020526040902054166107bb565b7f00000000000000000000000000000000000000000000000000000000000000005b90508484848181106107cf576107cf611755565b905060200201356107fa83838a8a888181106107ed576107ed611755565b9050602002013530610f53565b1015610832576040517f17d431f400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050808061083f906117f4565b91505061070a565b50505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146108a1576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8316156108cd576108c88383836112e8565b505050565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610927576040519150601f19603f3d011682016040523d82523d6000602084013e61092c565b606091505b505090508061093a57600080fd5b50505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610991576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82811660008181526002602090815260409182902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169486169485179055905192835290917f8357797ab855a0bad5103ea8bd2f21f986350e94d73f143ae114db8f0db5a93a91015b60405180910390a25050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610a6f576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821660008181526001602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915591519182527f878d105ed19c01e992a54459c2f04ba19432ac45600b42ce340d0342722074369101610a12565b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416600482018190526024820184905260009163a9059cbb906044016020604051808303816000875af1158015610b68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8c9190611784565b506040517f89afcb44000000000000000000000000000000000000000000000000000000008152306004820152600090819073ffffffffffffffffffffffffffffffffffffffff8716906389afcb449060240160408051808303816000875af1158015610bfd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2191906117a1565b915091506000808773ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610c73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c97919061186d565b50915091508515610df757610d1b8873ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cf0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1491906118bd565b89856112e8565b610d4683826dffffffffffffffffffffffffffff16846dffffffffffffffffffffffffffff1661145d565b6040517f022c0d9f0000000000000000000000000000000000000000000000000000000081526004810182905260006024820181905230604483015260806064830152608482015290955073ffffffffffffffffffffffffffffffffffffffff89169063022c0d9f9060a401600060405180830381600087803b158015610dcc57600080fd5b505af1158015610de0573d6000803e3d6000fd5b505050508385610df091906118da565b9450610f48565b610e708873ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6991906118bd565b89866112e8565b610e9b84836dffffffffffffffffffffffffffff16836dffffffffffffffffffffffffffff1661145d565b6040517f022c0d9f0000000000000000000000000000000000000000000000000000000081526000600482018190526024820183905230604483015260806064830152608482015290955073ffffffffffffffffffffffffffffffffffffffff89169063022c0d9f9060a401600060405180830381600087803b158015610f2157600080fd5b505af1158015610f35573d6000803e3d6000fd5b505050508285610f4591906118da565b94505b505050509392505050565b6040517fe6a4390500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152848116602483015260009182917f0000000000000000000000000000000000000000000000000000000000000000169063e6a4390590604401602060405180830381865afa158015610fec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101091906118bd565b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8083166004830152602482018790529192509087169063a9059cbb906044016020604051808303816000875af1158015611089573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ad9190611784565b506000808273ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156110fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611120919061186d565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff1691508673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16101561122d5761118486838361145d565b6040517f022c0d9f0000000000000000000000000000000000000000000000000000000081526000600482018190526024820183905273ffffffffffffffffffffffffffffffffffffffff88811660448401526080606484015260848301919091529195509084169063022c0d9f9060a401600060405180830381600087803b15801561121057600080fd5b505af1158015611224573d6000803e3d6000fd5b505050506112dd565b61123886828461145d565b6040517f022c0d9f0000000000000000000000000000000000000000000000000000000081526004810182905260006024820181905273ffffffffffffffffffffffffffffffffffffffff88811660448401526080606484015260848301919091529195509084169063022c0d9f9060a401600060405180830381600087803b1580156112c457600080fd5b505af11580156112d8573d6000803e3d6000fd5b505050505b505050949350505050565b604080518082018252601981527f7472616e7366657228616464726573732c75696e743235362900000000000000602091820152815173ffffffffffffffffffffffffffffffffffffffff85811660248301526044808301869052845180840390910181526064909201845291810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052915160009283928716916113af91906118f2565b6000604051808303816000865af19150503d80600081146113ec576040519150601f19603f3d011682016040523d82523d6000602084013e6113f1565b606091505b509150915081158061141f575080511580159061141f57508080602001905181019061141d9190611784565b155b15611456576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505050565b60008061146c856103e561192d565b9050600061147a848361192d565b905060008261148b876103e861192d565b61149591906118da565b90506114a1818361196a565b979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff811681146114ce57600080fd5b50565b6000602082840312156114e357600080fd5b81356114ee816114ac565b9392505050565b60008083601f84011261150757600080fd5b50813567ffffffffffffffff81111561151f57600080fd5b6020830191508360208260051b850101111561153a57600080fd5b9250929050565b6000806000806000806000806080898b03121561155d57600080fd5b883567ffffffffffffffff8082111561157557600080fd5b6115818c838d016114f5565b909a50985060208b013591508082111561159a57600080fd5b6115a68c838d016114f5565b909850965060408b01359150808211156115bf57600080fd5b6115cb8c838d016114f5565b909650945060608b01359150808211156115e457600080fd5b506115f18b828c016114f5565b999c989b5096995094979396929594505050565b6000806000806000806060878903121561161e57600080fd5b863567ffffffffffffffff8082111561163657600080fd5b6116428a838b016114f5565b9098509650602089013591508082111561165b57600080fd5b6116678a838b016114f5565b9096509450604089013591508082111561168057600080fd5b5061168d89828a016114f5565b979a9699509497509295939492505050565b6000806000606084860312156116b457600080fd5b83356116bf816114ac565b925060208401356116cf816114ac565b929592945050506040919091013590565b600080604083850312156116f357600080fd5b82356116fe816114ac565b9150602083013561170e816114ac565b809150509250929050565b80151581146114ce57600080fd5b6000806040838503121561173a57600080fd5b8235611745816114ac565b9150602083013561170e81611719565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561179657600080fd5b81516114ee81611719565b600080604083850312156117b457600080fd5b505080516020909101519092909150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611826576118266117c5565b5060010190565b60006020828403121561183f57600080fd5b81356114ee81611719565b80516dffffffffffffffffffffffffffff8116811461186857600080fd5b919050565b60008060006060848603121561188257600080fd5b61188b8461184a565b92506118996020850161184a565b9150604084015163ffffffff811681146118b257600080fd5b809150509250925092565b6000602082840312156118cf57600080fd5b81516114ee816114ac565b600082198211156118ed576118ed6117c5565b500190565b6000825160005b8181101561191357602081860181015185830152016118f9565b81811115611922576000828501525b509190910192915050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611965576119656117c5565b500290565b6000826119a0577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea264697066735822122001f1374a82176b8ee312f18893b1327e9af6f0a074adbd4a536307860573f77e64736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Contract for selling received tokens into weth. Deploy on secondary networks.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 13,
        "contract": "contracts/WethMaker.sol:WethMaker",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 17,
        "contract": "contracts/WethMaker.sol:WethMaker",
        "label": "isTrusted",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 634,
        "contract": "contracts/WethMaker.sol:WethMaker",
        "label": "bridges",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      }
    }
  }
}